dist: xenial
os: linux
language: python

jobs:
  include:
    - name: standard_py3.7
      python: 3.7

# cache local R libraries directory:
cache:
  directories:
    - ~/miniconda

before_install:
  # Set conda path info
  - MINICONDA_PATH=$HOME/miniconda;
  - MINICONDA_SUB_PATH=$MINICONDA_PATH/bin;
  # Obtain miniconda installer
  - if [[ -f $HOME/download/miniconda.sh ]]; then
        echo "miniconda.sh for posix already available from cache";
      else
        mkdir -p $HOME/download;
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          echo "downloading miniconda.sh for linux";
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
        elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          echo "downloading miniconda.sh for osx";
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
        fi;
    fi;

# install the package and dependencies:
install:
  # Install miniconda
  - if [[ -d $MINICONDA_SUB_PATH ]]; then
        echo "miniconda for posix already available from cache";
      else
        echo "installing miniconda for posix";
        bash $HOME/download/miniconda.sh -b -u -p $MINICONDA_PATH;
    fi;
  - export PATH="$MINICONDA_PATH:$MINICONDA_SUB_PATH:$PATH";
  - source "$MINICONDA_PATH/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no

  # need conda-build/verify to test building conda package
  - conda install -q conda-build
  - conda install -q conda-verify
  - conda update -q conda

  # Useful for debugging any issues with conda
  - conda info -a

  # configure the channels
  - conda config --add channels defaults
  - conda config --add channels bioconda
  - conda config --add channels conda-forge
  - conda install -q mamba -c conda-forge

  # build conda package
  - mkdir bld-dir
  - conda build -q conda/MAESTRO --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  
  # Now add this folder as a highest priority channel
  - conda config --add channels "file://`pwd`/bld-dir"

  # install the python part from newly built package
  - mamba create -q -n MAESTRO maestro

  # Activate this environment
  - conda activate MAESTRO

  # install LISA


script:
  - R CMD build . --no-manual
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
  # We also need some testing here!

# the following codes will upload when all the above is successful and
# the test is triggered within "liulab-dfci/MAESTRO" repo and
# the test is triggered with a tag value, e.g. 1.1.0 or 1.2.0 and
# the CONDA_UPLOAD_TOKEN should match the one retrieved under anaconda account

#after_success:
#  # Install the command line API for CONDA uploads
#  - mamba install anaconda-client
#  - |
#    # Only upload builds from tags
#    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == "liulab-dfci/MAESTRO"
#          && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' ]]; then
#      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN
#      anaconda upload bld-dir/**/PACKAGENAME-*.tar.bz2
#    fi

