# -*- coding: utf-8 -*-
# @Author: Dongqing Sun
# @E-mail: Dongqingsun96@gmail.com
# @Date:   2020-03-04 01:15:26
# @Last Modified by:   Dongqing Sun
# @Last Modified time: 2020-03-04 01:51:46


import os,sys
import snakemake.report

import argparse as ap

def CommandLineParser():
    parser = ap.ArgumentParser(description = "Generate scRNA result report. ")

    group_input = parser.add_argument_group("Input arguments")
    group_input.add_argument("--rna-object", dest = "rna_object", default = "", type = str,
        help = "Path of scRNA Seurat object generated by MAESTRO scRNA pipeline.")
    group_input.add_argument("--atac-object", dest = "atac_object", default = "", type = str,
        help = "Path of scATAC Seurat object generated by MAESTRO scATAC pipeline.")

    group_output = parser.add_argument_group("Output arguments")
    group_output.add_argument("-d", "--directory", dest = "directory", default = "MAESTRO", 
        help = "Path to the directory where the result file shall be stored. DEFAULT: MAESTRO.")
    group_output.add_argument("--outprefix", dest = "outprefix", default = "10x-genomics", 
        help = "Prefix of output files. DEFAULT: MAESTRO.")

    return parser.parse_args()

def main():

    SCRIPT_PATH = os.path.dirname(__file__)
    myparser = CommandLineParser()
    directory = myparser.directory
    outpre = myparser.outprefix
    rnaobj = myparser.rna_object
    atacobj = myparser.atac_object

    try:
        os.makedirs(directory)
    except OSError:
        # either directory exists (then we can ignore) or it will fail in the
        # next step.
        pass

    report_html_tempfile = os.path.join(SCRIPT_PATH, "html", "Integration_template.html")
    report_html_temp = open(report_html_tempfile, "r").read()

    # allsourceplot_link = '''"Plot/''' + outpre + '''_source.png"'''
    # rnaplot_link = '''"Plot/''' + outpre + '''_RNAonly.png"'''
    # atacplot_link = '''"Plot/''' + outpre + '''_ATAConly.png"'''
    # annoplot_link = '''"Plot/''' + outpre + '''_annotated.png"'''

    allsourceplot_link = snakemake.report.data_uri_from_file("Result/Analysis/%s_source.png"%outpre)
    rnaplot_link = snakemake.report.data_uri_from_file("Result/Analysis/%s_RNAonly.png"%outpre)
    atacplot_link = snakemake.report.data_uri_from_file("Result/Analysis/%s_ATAConly.png"%outpre)
    annoplot_link = snakemake.report.data_uri_from_file("Result/Analysis/%s_annotated.png"%outpre)

    report_html_instance = report_html_temp % {"outprefix":outpre, "scrnaobject":rnaobj, "scatacaobject":atacobj, "allsource":allsourceplot_link, "rnacluster":rnaplot_link, "ataccluster":atacplot_link, "allannotate":annoplot_link}

    report_html_instancefile = os.path.join(directory, outpre + "_integrate_report.html")
    outf = open(report_html_instancefile,"w")
    outf.write(report_html_instance)
    outf.close()


if __name__ == "__main__":
    main()

